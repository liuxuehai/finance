package finance;

import org.springframework.data.redis.connection.RedisConnection;
import org.springframework.data.redis.connection.jedis.JedisConnectionFactory;
import org.springframework.util.StringUtils;

import com.alibaba.fastjson.JSON;
import com.finance.pojo.model.mq.StockPrice;

import redis.clients.jedis.JedisShardInfo;

public class Sput {
	static String scrapy = "finance.stock.scrapy";

	public static void main(String[] args) {
		JedisShardInfo info = new JedisShardInfo("172.20.20.100", 6379);

		JedisConnectionFactory f = new JedisConnectionFactory(info);
		RedisConnection connection = f.getConnection();
		
		String codes="600280 600281 600282 600283 600284 600285 600287 600288 600289 600290 "
				+ "600291 600292 600293 600297600298 600299 600300 600301 600302 600303 600305 600306 600307 600308 600309 600310 600311 600312 "
				+ "600313 600315 600316 600317 600318 600319 600321 600322 600323 600325 600326 600327 600328 600329 "
				+ "600330 600331 600332 600333 600335 600336 600337 600338 600339 600340 600343 600345 600346 600348 "
				+ "600350 600351 600352 600353 600354 600355 600356 600358 600359 600360 600361 600362 600363 600365 "
				+ "600366 600367 600368 600369 600370 600371 600372 600373 600375 600376 600377 600378 600379 600380 "
				+ "600381 600382 600383 600385 600386 600387 600388 600389 600390 600391 600392 600393 600395 600396 "
				+ "600397 600398 600399 600400 600401 600403 600405 600406 600408 600409 600410 600415 600416 600418 "
				+ "600419 600420 600421 600422 600423 600425 600426 600428 600429 600432 600433 600435 600436 600438 "
				+ "600439 600444 600446 600448 600449 600452 600455 600456 600458 600459 600460 600461 600462 600463 "
				+ "600466 600467 600468 600469 600470 600475 600476 600477 600478 600479 600480 600481 600482 600483 "
				+ "600485 600486 600487 600488 600489 600490 600491 600493 600495 600496 600497 600498 600499 600500 "
				+ "600501 600502 600503 600505 600506 600507 600508 600509 600510 600511 600512 600513 600515 600516 "
				+ "600517 600518 600519 600520 600521 600522 600523 600525 600526 600527 600528 600529 600530 600531 "
				+ "600532 600533 600535 600536 600537 600538 600539 600540 600543 600545 600546 600547 600548 600549 "
				+ "600550 600551 600552 600556 600557 600558 600559 600560 600561 600562 600563 600565 600566 600567 "
				+ "600568 600569 600570 600571 600572 600573 600575 600576 600577 600578 600579 600580 600581 600582 "
				+ "600583 600584 600585 600586 600587 600588 600589 600590 600592 600593 600594 600595 600596 600597 "
				+ "600598 600599 600600 600601 600603 600605 600606 600608 600609 600615 600616 600620 600621 600622 "
				+ "600624 600626 600628 600629 600630 600633 600634 600635 600636 600637 600638 600640 600641 600642 "
				+ "600643 600644 600645 600647 600649 600651 600652 600653 600654 600655 600657 600658 600660 600661 "
				+ "600662 600664 600665 600666 600667 600668 600671 600673 600674 600675 600676 600677 600678 600681 "
				+ "600682 600683 600684 600685 600686 600687 600688 600690 600691 600692 600693 600694 600696 600697 "
				+ "600699 600701 600702 600703 600704 600705 600706 600707 600708 600710 600711 600712 600713 600714 "
				+ "600715 600716 600717 600718 600719 600720 600721 600722 600723 600724 600725 600727 600728 600729 "
				+ "600730 600731 600733 600734 600735 600736 600737 600738 600739 600740 600741 600742 600743 600744 "
				+ "600745 600746 600747 600748 600749 600750 600753 600755 600756 600757 600758 600759 600760 600761 "
				+ "600763 600764 600765 600766 600767 600768 600769 600770 600771 600773 600774 600775 600777 600778 "
				+ "600779 600780 600781 600782 600783 600784 600785 600787 600789 600790 600791 600792 600793 600794 "
				+ "600795 600796 600797 600798 600800 600802 600803 600804 600805 600806 600807 600808 600809 600810 "
				+ "600811 600812 600814 600815 600816 600817 600820 600821 600823 600824 600825 600826 600828 600829 "
				+ "600830 600831 600833 600834 600836 600837 600838 600839 600846 600847 600850 600853 600854 600855 "
				+ "600856 600857 600858 600859 600860 600861 600862 600863 600864 600865 600866 600867 600868 600869 "
				+ "600870 600871 600872 600873 600874 600875 600876 600877 600879 600880 600881 600882 600883 600884 "
				+ "600885 600886 600887 600888 600889 600890 600891 600892 600893 600894 600895 600896 600897 600898 "
				+ "600900 600960 600961 600962 600963 600965 600966 600967 600969 600971 600973 600975 600976 600978 "
				+ "600979 600980 600981 600982 600983 600984 600985 600986 600987 600988 600990 600992 600993 600995 "
				+ "600997 601607 000001 000002 000004 000005 000006 000007 000008 000009 000010 000011 000012 000014 "
				+ "000016 000017 000018 000019 000020 000021 000022 000023 000025 000026 000027 000028 000029 000030 "
				+ "000031 000032 000033 000034 000035 000036 000037 000038 000039 000040 000042 000043 000045 000046 "
				+ "000048 000049 000050 000053 000054 000055 000056 000058 000059 000060 000061 000062 000063 000065 "
				+ "000066 000068 000069 000070 000078 000088 000089 000090 000096 000099 000100 000150 000151 000152 "
				+ "000153 000155 000156 000157 000158 000159 000160 000168 000301 000400 000401 000402 000403 000404 "
				+ "000407 000408 000409 000410 000411 000413 000415 000416 000417 000418 000419 000420 000421 000422 "
				+ "000423 000425 000426 000428 000429 000430 000468 000488 000498 000501 000502 000503 000504 000505 "
				+ "000506 000507 000509 000510 000511 000512 000513 000514 000516 000517 000518 000519 000520 000521 "
				+ "000523 000524 000525 000526 000528 000529 000530 000531 000532 000533 000534 000536 000537 000538 "
				+ "000539 000540 000541 000543 000544 000545 000546 000547 000548 000550 000551 000552 000553 000554 "
				+ "000555 000557 000558 000559 000560 000561 000563 000564 000565 000566 000567 000568 000570 000571 "
				+ "000572 000573 000576 000581 000582 000584 000585 000586 000587 000589 000590 000591 000592 000593 "
				+ "000595 000596 000597 000598 000599 000600 000601 000603 000605 000606 000607 000608 000609 000610 "
				+ "000611 000612 000613 000615 000616 000617 000619 000620 000622 000623 000625 000626 000627 000628 "
				+ "000629 000630 000631 000632 000633 000635 000636 000637 000638 000639 000650 000651 000652 000655 "
				+ "000656 000657 000659 000661 000662 000663 000665 000666 000667 000668 000669 000670 000671 000672 "
				+ "000673 000676 000677 000678 000679 000680 000681 000682 000683 000685 000686 000687 000688 000690 "
				+ "000691 000692 000693 000695 000697 000698 000700 000701 000702 000703 000705 000706 000707 000708 "
				+ "000709 000710 000711 000712 000713 000715 000716 000717 000718 000719 000720 000721 000722 000723 "
				+ "000725 000726 000727 000728 000729 000731 000732 000733 000735 000736 000737 000738 000739 000748 "
				+ "000750 000751 000752 000753 000755 000756 000757 000758 000759 000760 000761 000762 000766 000767 "
				+ "000768 000771 000776 000777 000778 000779 000780 000782 000783 000785 000786 000788 000789 000790 "
				+ "000791 000792 000793 000795 000796 000797 000798 000799 000800 000801 000802 000803 000806 000807 "
				+ "000809 000810 000811 000812 000813 000815 000816 000818 000819 000820 000821 000822 000823 000825 "
				+ "000826 000828 000829 000830 000831 000833 000835 000836 000837 000838 000839 000848 000850 000851 "
				+ "000852 000856 000858 000859 000860 000861 000862 000863 000868 000869 000875 000876 000877 000878 "
				+ "000880 000881 000882 000883 000885 000886 000887 000888 000889 000890 000892 000893 000895 000897 "
				+ "000898 000899 000900 000901 000902 000903 000905 000906 000908 000909 000910 000911 000912 000913 "
				+ "000915 000916 000917 000918 000919 000920 000921 000922 000923 000925 000926 000927 000928 000929 "
				+ "000930 000931 000932 000933 000935 000936 000937 000938 000939 000948 000949 000950 000951 000952 "
				+ "000953 000955 000957 000958 000959 000960 000961 000962 000963 000965 000966 000967 000968 000969 "
				+ "000970 000971 000972 000973 000975 000976 000977 000978 000979 000980 000981 000982 000983 000985 "
				+ "000986 000987 000988 000989 000990 000992 000993 000995 000996 000997 000998 000999 001696 001896 "
				+ "002001 002002 002003 002004 002005 002006 002007 002008 002009 002010 002011 002012 002013 002014 "
				+ "002015 002016 002017 002018 002019 002020 002021 002022 002023 002024 002025 002026 002027 002028 "
				+ "002029 002030 002031 002032 002033 002034 002035 002036 002037 002038";
		String [] code=codes.split(" ");
		
		for (String temp : code){
			if(!StringUtils.isEmpty(temp)){
				StockPrice s = new StockPrice();
				s.setCode(temp.trim());
				s.setStartDate("2004-10-08");
				s.setEndDate("2016-11-30");
				lPush(connection, s);
			}
			
		}

	}

	private static void lPush(RedisConnection connection, StockPrice temp) {
		long v = connection.lPush(scrapy.getBytes(), JSON.toJSONString(temp).getBytes());
		System.out.println(v);
	}
	
	private static StockPrice lPop(RedisConnection connection) {
		byte[] reslut = connection.lPop(scrapy.getBytes());
		String ss = new String(reslut);
		StockPrice temp = JSON.parseObject(ss, StockPrice.class);
		System.out.println(temp);
		return temp;
	}

}
